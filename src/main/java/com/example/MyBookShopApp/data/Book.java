package com.example.MyBookShopApp.data;

import com.example.MyBookShopApp.data.entity.book.file.BookFileEntity;
import com.example.MyBookShopApp.data.entity.book.review.BookReviewEntity;
import com.example.MyBookShopApp.data.entity.book.review.BookReviewLikeEntity;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.persistence.*;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

@Entity
@Table(name = "book")
@ApiModel(description = "entity representing a book")
public class Book {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @ApiModelProperty("id generated by db automatically")
    private Integer id;

    @Column(name = "pub_date")
    @ApiModelProperty("date of book publication")
    private LocalDateTime pubDate;

    @ManyToOne
    @JoinColumn(name = "author_id", referencedColumnName = "id")
    @JsonIgnore
    private Author author;

    @Column(name = "is_bestseller")
    @ApiModelProperty("if isBestseller = 1 so the book is considered to be bestseller and if 0 the book is not a " +
    "bestseller")
    private Integer isBestseller;

    @ApiModelProperty("mnemonical identity sequence of characters")
    private String slug;
    @ApiModelProperty("book title")
    private String title;
    @ApiModelProperty("book url")
    private String image;

    @Column(columnDefinition = "TEXT")
    @ApiModelProperty("book description text")
    private String description;

    @Column(name = "price")
    @JsonProperty("price")
    @ApiModelProperty("book price without discount")
    private Integer priceOld;

    @Column(name = "discount")
    @JsonProperty("discount")
    @ApiModelProperty("discount value for book")
    private Double price;

    private Integer numberOfBought ;
    private Integer numberInCart;
    private Integer numberDelayed ;

    private String tag;

    @JsonGetter("authors")
    public String authorsFullName(){
        return author.toString();
    }

    @JsonProperty
    public Integer discountPrice(){
        return priceOld - Math.toIntExact((Math.round(price * priceOld)));
    }


    @OneToMany(mappedBy = "book")
    private List<BookReviewEntity> bookReviewEntityList = new ArrayList<>();

    public List<BookReviewEntity> getBookReviewEntityList()
    {
        return bookReviewEntityList;
    }

    public void setBookReviewEntityList(
        List<BookReviewEntity> bookReviewEntityList)
    {
        this.bookReviewEntityList = bookReviewEntityList;
    }

    @OneToMany(mappedBy = "book")
    private List<BookFileEntity> bookFileEntityList = new ArrayList<>();



    public List<BookFileEntity> getBookFileEntityList()
    {
        return bookFileEntityList;
    }

    public void setBookFileEntityList(
        List<BookFileEntity> bookFileEntityList)
    {
        this.bookFileEntityList = bookFileEntityList;
    }

    public String getTag()
    {
        return tag;
    }

    public void setTag(String tag)
    {
        this.tag = tag;
    }

    public Integer getNumberOfBought()
    {
        return numberOfBought;
    }

    public void setNumberOfBought(Integer numberOfBought)
    {
        this.numberOfBought = numberOfBought;
    }

    public Integer getNumberInCart()
    {
        return numberInCart;
    }

    public void setNumberInCart(Integer numberInCart)
    {
        this.numberInCart = numberInCart;
    }

    public Integer getNumberDelayed()
    {
        return numberDelayed;
    }

    public void setNumberDelayed(Integer numberDelayed)
    {
        this.numberDelayed = numberDelayed;
    }

    public Integer getIsBestseller() {
        return isBestseller;
    }

    public void setIsBestseller(Integer isBesteller) {
        this.isBestseller = isBesteller;
    }

    public String getSlug() {
        return slug;
    }

    public void setSlug(String slug) {
        this.slug = slug;
    }

    public String getImage() {
        return image;
    }

    public void setImage(String image) {
        this.image = image;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public LocalDateTime getPubDate()
    {
        return pubDate;
    }

    public void setPubDate(LocalDateTime pubDate)
    {
        this.pubDate = pubDate;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Author getAuthor() {
        return author;
    }

    public void setAuthor(Author author) {
        this.author = author;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public Integer getPriceOld() {
        return priceOld;
    }

    public void setPriceOld(Integer priceOld) {
        this.priceOld = priceOld;
    }

    public Double getPrice() {
        return price;
    }

    public void setPrice(Double price) {
        this.price = price;
    }

    @Override
    public String toString() {
        return "Book{" +
                "id=" + id +
                ", author=" + author +
                ", title='" + title + '\'' +
                ", priceOld=" + priceOld +
                ", img path =" + image +
                ", price=" + price +
                '}';
    }
}
